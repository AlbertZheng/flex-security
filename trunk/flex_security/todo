#1.创建基于styleName的权限控制.
	如: 
	styleName="security() or security:"  //resouceString is id
	styleName="security(permission,controlBy) or security:permission"
	
2. remove的控制完善
	controlBy remove在security(null,remove)中存在会重复创建securityAction导致不能正常运行的问题
	remove后会导致事件监听停止:Application.application.systemManager.addEventListener(Event.ADDED_TO_STAGE, processComponenet, true);

...#3. 该客户端实现某个接口,以读取权限数据,如ISecurityMetadata.getSecurityActions()
	#3.1 接口使用具体的数据类型
	3.2 只要发现mxml有getSecurityActions()方法，即去读取该权限内容

#4. SecurityControler增加手工增加需要控制权限的,如addSecurityAction()

考虑defaultControlBy为enabled或者remove,因为visible在TabNavigator中没有作用
	控制比较:
	visible: 在TabNavigator中发现没有作用
	remove: 与visible功能一样，在TabNavigator也可以使用
	enabled: 在所有容器中都可以使用
	includeInLayout: 发现会重叠，没有多大用处

6.编写使用文档 wiki
#7.为styleName增加支持security(null,enabled);
#8.考虑为styleName增加支持security(,enabled);

9.考虑增加 controlBy=all, visible增加includeInLayout,考虑增加controlBy=visible-enabled

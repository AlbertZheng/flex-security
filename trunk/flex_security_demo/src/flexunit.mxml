<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="runMe()" xmlns:flexUnitUIRunner="http://www.adobe.com/2009/flexUnitUIRunner" 
	styleName="flexUnitApplication" >
	
	<mx:Script>
		<![CDATA[
			import cn.org.rapid_framework.FlexSecuritySuite;
			
			import org.flexunit.assertThat;
			import org.flexunit.asserts.*;
			import org.flexunit.listeners.UIListener;
			import org.flexunit.runner.FlexUnitCore;
			import org.flexunit.runner.Request;
			import org.flexunit.runner.notification.async.XMLListener;
			
			
			private var core:FlexUnitCore;
			public function runMe():void {

				core = new FlexUnitCore();

/* 				assertEquals( 1, 2 ); 
 */				//Listeners for CI systems or Flash Builder Plugins 
				//core.addListener( new CIListener());
				//core.addListener( new XMLListener( "FlexUnit4Test" ) );

				//Listener for outputting to the trace console via the Flex logging class, Flex Only
				//core.addListener( TextListener.getDefaultTextListener( LogEventLevel.DEBUG ) );

				//Listener for outputting to the trace console via the trace method, ActionScript or Flex
				//core.addListener( new TraceListener() );

				//Listener for the UI
				core.addListener( new UIListener( uiListener ));
				
				//This run statements executes the unit tests for the FlexUnit4 framework 
				//the Hamcrest matchers and some of the tests shown in the FlexUnit in 360 seconds blog post
				core.run( FlexSecuritySuite  );
				
				//If you are interested, the original FlexUnit1 unit tests are available in
				//a suite named AllFrameworkTests. Just add this one to the list in core.run()
				//to see it execute as well

				//It can take a request, which allows you to selected specific tests
				//core.run( Request.method( TestTwo, "testTwo3" ) );
				
				//It can take a comma separated list of the previous choices
				//core.run( FrameworkSuite, TestAssert, Request.method( TestAssert, "testFail" ) );
				
				//It can take an array
				//var ar:Array = new Array();
				//ar.push( Request.method( TestAssert, "testFail" ) );
				//ar.push( FrameworkSuite );
				//core.run( ar );

				//Or a combination of any of the above
				//var ar:Array = new Array();
				//ar.push( Request.method( TestAssert, "testFail" ) );
				//ar.push( FrameworkSuite );
				//core.run( FrameworkSuite, ar, TestAssert  );

				//The only really important thing is that you pass them all at once. You don't want to call core.run() more than once at this time
			}
		]]>
	</mx:Script>
	
	<flexUnitUIRunner:TestRunnerBase id="uiListener" width="100%" height="100%" />	
</mx:Application>
